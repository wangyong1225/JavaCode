1) 子程序的调用：在跳往子程序前，会先将下个指令的地址存到堆栈中，直到子程序执行完再往地址取出，以回到原来的程序中。
2）处理递归调用：和子程序的调用类似，只是除了储存下一个指令的地址外，也将参数，区域变量等数据存入堆栈中。
3）表达式的转换【中缀表达式转后缀表达式】与求值（实际解决）
4）二叉树的遍历
5）图形的深度优先（depth-first）搜索法

实现栈的思路分析
1、使用数组模拟栈
2、定义一个变量top来表示栈顶，初始化为-1
3、入栈的操作，当有数据加入栈时，top++；stack[top]=data;
4、出栈的操作，int value = stack[top];top--;return value;


使用栈来完成一个表达式的结果
1、通过一个index值，来遍历表达式
2、如果我们发现是一个数字，直接入数栈
3、如果发现扫描到的是一个符号，就分如下情况
3.1、如果发现当前的符号栈为空，就直接入栈
3.2、如果符号栈有操作符，就进行比较，如果当前的操作符的优先级小于或者等于栈中的操作符，就需要从数栈中pop出两个数，在
从符号栈照片那个pop出一个符号，进击运算，将得到的结果，入数栈，然后将当前的操作符入符号栈.如果当前的操作符大于栈中的
操作符，就直接入栈
4、当表达式扫描完毕，就顺序从数栈和符号栈中pop出相应的数和符号，并计算
5、最后在数栈只有一个数字，就是表达式的结果